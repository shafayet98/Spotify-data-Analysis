top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
play()
?chain
??chain
nxt()
submit()
View(result3)
submit()
submit()
submit()
submit()
submit()
exit()
bye()
swirl()
library(spotifyr)
library(dplyr)
Sys.setenv(SPOTIFY_CLIENT_ID = 'af234138af424a8a8cfbe490cbd4116b')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '84f371e90d484379a8a18960364432ba')
access_token <- get_spotify_access_token()
library(httpuv)
crrPlay <- get_my_recently_played(limit = 5)
crrPlay <- get_my_recently_played(limit = 5)
cran <- tbl_df(crrPlay)
select(cran, track.name)
getSaved <- get_my_saved_tracks(limit = 10)
cran2 <- tbl_df(getSaved)
select(cran2, track.name)
htmlUrl <- url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode <- readLines(htmlUrl)
close(htmlUrl)
head(htmlCode)
?nchar
htmlCode(nchar(4))
nchar(htmlCode[1])
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
SST <- read.fwf(fileUrl, skip=4)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
SST <- read.fwf(fileUrl, skip=4, widths=c(12, 7))
SST
head(SST)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
SST <- read.fwf(fileUrl, skip=4, widths=c(12, 7,5,6))
head(SST)
sum(SST[,4])
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
SST <- read.fwf(fileUrl, skip=4, widths=c(12, 7, 4, 9, 4, 9, 4, 9, 4))
sum(SST[,4])
?read.fwf
library(spotifyr)
library(dplyr)
library(httpuv)
Sys.setenv(SPOTIFY_CLIENT_ID = 'af234138af424a8a8cfbe490cbd4116b')
Sys.setenv(SPOTIFY_CLIENT_SECRET = '84f371e90d484379a8a18960364432ba')
access_token <- get_spotify_access_token()
receentPlayed <- get_my_recently_played(limit = 4)
print(receentPlayed$track.name)
receentPlayed <- get_my_recently_played(limit = 10)
print(receentPlayed$track.name)
receentPlayed <- get_my_recently_played(limit = 100)
print(receentPlayed$track.name)
receentPlayed <- get_my_recently_played(limit = 20)
print(receentPlayed$track.name)
receentPlayed <- get_my_recently_played(limit = 30)
print(receentPlayed$track.name)
receentPlayed <- get_my_recently_played(limit = 50)
print(receentPlayed$track.name)
getSavedTrack <- get_my_saved_tracks()
print(getSavedTrack$track.name)
getSavedTrack <- get_my_saved_tracks(limit = 60)
print(getSavedTrack$track.name)
getSavedTrack <- get_my_saved_tracks(limit = 20)
print(getSavedTrack$track.name)
getSavedTrack <- get_my_saved_tracks(limit = 30)
print(getSavedTrack$track.name)
getSavedTrack <- get_my_saved_tracks(limit =50)
print(getSavedTrack$track.name)
getSavedTrack <- get_my_saved_tracks(limit =60)
print(getSavedTrack$track.name)
getSavedTrack <- get_my_saved_tracks(limit = 50:70)
print(getSavedTrack$track.name)
userID <- "3bm6rr4w38leyqq1ivdto11ig"
getPlayList <- get_user_playlists(userID,limit= 2)
print(getPlayList)
getPlayList <- get_user_playlists(userID,limit=3)
print(getPlayList)
getSavedTrack <- get_my_saved_tracks(limit = 50)
print(getSavedTrack$track.name)
print(names(getSavedTrack))
getSavedTrack <- get_my_saved_tracks(limit = 50)
print(getSavedTrack$track.album.album_type)
getSavedTrack <- get_my_saved_tracks(limit = 50)
print(getSavedTrack$track.name)
print(names(getSavedTrack))
oneTrack <- getSavedTrack$track.name[30]
print(oneTrack)
print(names(getSavedTrack))
oneTrackID <- getSavedTrack$track.id[30]
print(oneTrackID)
getTrackInfo <- get_track(oneTrackID)
print(getTrackInfo)
oneTrackID <- getSavedTrack$track.id[30]
print(oneTrackID)
getTrackAlbum <- get_track(oneTrackID$album)
print(getTrackAlbum)
oneTrackID <- getSavedTrack$track.id[30]
print(oneTrackID)
getTrackAlbum <- get_track(oneTrackID$album$name)
getTrackAlbum <- get_track(oneTrackID)
print(getTrackAlbum)
print(getTrackAlbum$album$name)
print(getTrackAlbum$album$id)
oneTrackID <- getSavedTrack$track.id[30]
print(oneTrackID)
getTrackAlbum <- get_track(oneTrackID)
getAlbumId <- getTrackAlbum$album$id
print(getTrackAlbum$album$id)
AlbumInfo <- get_album(getAlbumId)
print(AlbumInfo)
AlbumInfo <- get_album(getAlbumId)
print(AlbumInfo$genres)
oneTrackID <- getSavedTrack$track.id[20]
print(oneTrackID)
getTrackAlbum <- get_track(oneTrackID)
getAlbumId <- getTrackAlbum$album$id
print(getTrackAlbum$album$id)
AlbumInfo <- get_album(getAlbumId)
print(AlbumInfo$genres)
topTracks <- get_my_top_artists_or_tracks(type = "tracks", limit = 20)
print(topTracks)
print(names(topTracks))
print(topTracks$name)
setwd("~/Documents/R_Programs/Spotify-data-Analysis")
df <- read.csv('spotifyTopListenedTrackAnalysi-final.csv')
View(df)
library(ggplot2)
library(dplyr)
ggplot(df, aes(x = track.Popularity))+
theme_bw() +
geom_density( alpha= 0.5, fill = "#FF6666") +
labs( x ="Popularity of tracks",
title = "Popularity of songs")
df$key <- as.factor(df$key)
ggplot(df, aes(x = key, fill = key))+
theme_bw()+
geom_bar()+
scale_fill_discrete(name="Pitches", labels=c("0-C", "1-C# Db", "2-D","3-D# Eb","4-E","5-F","6-F# Gb","7-G","8-G# Ab","9-A","10-A# Bb","11-B"))+
labs(x = "Keys",
y = "number of tracks",
title = "Keys along with track counts")
ggplot(df, aes(x = loudness, y = energy))+
theme_bw()+
geom_point()+
geom_smooth(method = "lm")+
labs(x = "loudness of track",
y = "energy of tracks",
title = "Effect of loudness in Measuring Energy")
ggplot(df_new, aes(x = acousticness, y = track.Popularity, color = popularity_class, size = 0.4))+
theme_bw()+
geom_point()+
labs(x = "acousticness of track",
y = "Popularity of track",
title = "Acoustic-ness effects on popularity")
df_new <- tbl_df(df)
dim(df_new)
ggplot(df_new, aes(x = acousticness, y = track.Popularity, color = popularity_class, size = 0.4))+
theme_bw()+
geom_point()+
labs(x = "acousticness of track",
y = "Popularity of track",
title = "Acoustic-ness effects on popularity")
df_new <- mutate( df_new, popularity_class = ifelse( df_new$track.Popularity >= 1 & df_new$track.Popularity <= 20,"E",
ifelse(df_new$track.Popularity > 20 & df_new$track.Popularity <=40, "D",
ifelse(df_new$track.Popularity > 40 & df_new$track.Popularity <=60,"C",
ifelse(df_new$track.Popularity > 60 & df_new$track.Popularity <= 80, "B",
ifelse(df_new$track.Popularity > 80, "A","NULL" ) ) ) ) ) )
ggplot(df_new, aes(x = acousticness, y = track.Popularity, color = popularity_class, size = 0.4))+
theme_bw()+
geom_point()+
labs(x = "acousticness of track",
y = "Popularity of track",
title = "Acoustic-ness effects on popularity")
ggplot(df_new, aes(x = acousticness, y = track.Popularity, color = popularity_class))+
theme_bw()+
geom_point()+
labs(x = "acousticness of track",
y = "Popularity of track",
title = "Acoustic-ness effects on popularity")
ggplot(df_new, aes(x = popularity_class, fill = key ))+
theme_bw() +
geom_bar() +
labs( x ="Popularity Class (A(Highest)-E(Lowest))",
title = "")
df_new$ID <- seq.int(nrow(df_new))
View(df_new)
t_c <- c()
sapply(df_new$ID, function(elem){
if (elem < 10){
t_c <- "A"
}
})
t_c
t_c <- sapply(df_new$ID, function(elem){
if (elem <= 10){
return("A")
}
})
t_c
t_c <- sapply(df_new$ID, function(elem){
if (elem <= 10){return("A")}
else if(elem <= 20){return("B")}
else if(elem <= 20){return("B")}
else if(elem <= 20){return("B")}
})
t_c <- sapply(df_new$ID, function(elem){
if (elem <= 20){return("A")}
else if(elem <= 40){return("B")}
else if(elem <= 60){return("C")}
else if(elem <= 70){return("D")}
else if(elem <= 100){return("E")}
})
type(t_c)
t_c
length(t_c)
df_new <- mutate( df_new, top_class = t_c)
View(df_new)
type(df_new$top_class)
class(df_new$top_class)
df_new$top_class <- as.factor(df_new$top_class)
ggplot(df_new, aes(x = top_class, fill = key ))+
theme_bw() +
geom_bar() +
labs( x ="Popularity Class (A(Highest)-E(Lowest))",
title = "")
df_new$top_class <- as.factor(df_new$top_class)
ggplot(df_new, aes(x = popularity_class, fill = key ))+
theme_bw() +
geom_bar() +
labs( x ="Top Base Class",
title = "")
ggplot(df_new, aes(x = energy, color = top_class))+
theme_bw() +
geom_density( alpha= 0.5, fill = "#FF6666") +
labs( x ="Popularity of tracks",
title = "Popularity of songs")
ggplot(df_new, aes(x = energy, color = top_class))+
theme_bw() +
geom_density( alpha= 0.5) +
labs( x ="Popularity of tracks",
title = "Popularity of songs")
ggplot(df_new, aes(x = energy, fill = top_class))+
theme_bw() +
geom_density( alpha= 0.5) +
labs( x ="Energy of tracks",
title = "Popularity of songs")
ggplot(df_new, aes(x = key, fill = top_class))+
theme_bw() +
geom_density( alpha= 0.5) +
labs( x ="Energy of tracks",
title = "Popularity of songs")
use warnings()
warnings
ggplot(df_new, aes(x = energy, fill = top_class))+
theme_bw() +
geom_density( alpha= 0.5) +
labs( x ="Energy of tracks",
title = "Popularity of songs")
ggplot(df_new, aes(x = track.Popularity, fill = top_class))+
theme_bw() +
geom_density( alpha= 0.5) +
labs( x ="Energy of tracks",
title = "Popularity of songs")
ggplot(df_new, aes(y = track.Popularity, fill = top_class))+
theme_bw() +
geom_density( alpha= 0.5) +
labs( x ="Energy of tracks",
title = "Popularity of songs")
ggplot(df_new, aes(x = track.Popularity, fill = top_class))+
theme_bw() +
geom_density( alpha= 0.5) +
labs( x ="Energy of tracks",
title = "Popularity of songs")
ggplot(df_new, aes(x = track.Popularity, fill = top_class))+
theme_bw() +
geom_density( alpha= 0.3) +
labs( x ="Energy of tracks",
title = "Popularity of songs")
ggplot(df_new, aes(x = track.Popularity, fill = top_class))+
theme_bw() +
geom_density( alpha= 0.3) +
labs( x ="Energy of tracks",
title = "Popularity of songs")
ggplot(df_new, aes(x = track.Popularity, fill = key))+
theme_bw() +
geom_density( alpha= 0.3) +
labs( x ="Energy of tracks",
title = "Popularity of songs")
ggplot(df_new, aes(x = energy, fill = top_class))+
theme_bw() +
geom_density( alpha= 0.3) +
labs( x ="Energy of tracks",
title = "Popularity of songs")
par(mfrow=c(2,2))
ggplot(df_new, aes(x = energy, fill = top_class))+
theme_bw() +
geom_density( alpha= 0.3) +
labs( x ="Energy of tracks",
title = "Popularity of songs")
ggplot(df_new, aes(x = acousticness, fill = top_class))+
theme_bw() +
geom_density( alpha= 0.3) +
labs( x ="Energy of tracks",
title = "Popularity of songs")
par(mfrow=c(2,2))
attach(df_new)
par(mfrow=c(2,2))
ggplot(df_new, aes(x = energy, fill = top_class))+
theme_bw() +
geom_density( alpha= 0.3) +
labs( x ="Energy of tracks",
title = "Popularity of songs")
ggplot(df_new, aes(x = acousticness, fill = top_class))+
theme_bw() +
geom_density( alpha= 0.3) +
labs( x ="Energy of tracks",
title = "Popularity of songs")
t_energy <- ggplot(df_new, aes(x = energy, fill = top_class))+
theme_bw() +
geom_density( alpha= 0.3) +
labs( x ="Energy of tracks",
title = "Popularity of songs")
t_acoustic <- ggplot(df_new, aes(x = acousticness, fill = top_class))+
theme_bw() +
geom_density( alpha= 0.3) +
labs( x ="Energy of tracks",
title = "Popularity of songs")
t_loudness <- ggplot(df_new, aes(x = loudness, fill = top_class))+
theme_bw() +
geom_density( alpha= 0.3) +
labs( x ="Energy of tracks",
title = "Popularity of songs")
figure <- ggarrange(t_energy, t_loudness, t_acoustic,
labels = c("A", "B", "C"),
ncol = 2, nrow = 2)
library("ggpubr")
install.packages("ggpubr")
library(ggpubr)
figure <- ggarrange(t_energy, t_loudness, t_acoustic,
labels = c("A", "B", "C"),
ncol = 2, nrow = 2)
figure
figure <- ggarrange(t_energy, t_loudness,
labels = c("A", "B", "C"),
ncol = 2, nrow = 1, t_acoustic)
figure
figure <- ggarrange(t_energy, t_loudness, t_acoustic,
labels = c("A", "B", "C"),
ncol = 2, nrow = 2)
figure
t_energy <- ggplot(df_new, aes(x = energy, fill = top_class))+
theme_bw() +
geom_density( alpha= 0.3) +
labs( x ="Energy of tracks",
title = "Distribution of Enerygy")
# Top Song wise acoustic-ness Distribution
t_acoustic <- ggplot(df_new, aes(x = acousticness, fill = top_class))+
theme_bw() +
geom_density( alpha= 0.3) +
labs( x ="acousticness of tracks",
title = "Distribution of Acousticness")
# Top Song wise loudness Distribution
t_loudness <- ggplot(df_new, aes(x = loudness, fill = top_class))+
theme_bw() +
geom_density( alpha= 0.3) +
labs( x ="Loudness of tracks",
title = "Distribution of Loudness")
figure <- ggarrange(t_energy, t_loudness, t_acoustic,
labels = c("A", "B", "C"),
ncol = 2, nrow = 2)
figure
p1 <- ggplot(data, aes(y=energy, fill=top_class)) +
geom_boxplot() +
facet_wrap(~top_class)
p1 <- ggplot(df_new, aes(y=energy, fill=top_class)) +
geom_boxplot() +
facet_wrap(~top_class)
p1
p1 <- ggplot(df_new, aes(x=energy, fill=top_class)) +
geom_boxplot() +
facet_wrap(~top_class)
p1
p1 <- ggplot(df_new, aes(x=energy, fill=key)) +
geom_boxplot() +
facet_wrap(~key)
p1
key_loudness <- ggplot(df_new, aes(x=loudness, fill=key)) +
geom_boxplot() +
facet_wrap(~key)
key_loudness
figure
# Top Song wise Popularity Distribution
t_loudness <- ggplot(df_new, aes(x = track.Popularity, fill = top_class))+
theme_bw() +
geom_density( alpha= 0.3) +
labs( x ="Popularity of tracks",
title = "Distribution of Popularity")
t_popularity <- ggplot(df_new, aes(x = track.Popularity, fill = top_class))+
theme_bw() +
geom_density( alpha= 0.3) +
labs( x ="Popularity of tracks",
title = "Distribution of Popularity")
figure <- ggarrange(t_energy, t_loudness, t_acoustic, t_popularity,
labels = c("A", "B", "C","D"),
ncol = 2, nrow = 2)
figure
# Top Song wise Energy Distribution
t_energy <- ggplot(df_new, aes(x = energy, fill = top_class))+
theme_bw() +
geom_density( alpha= 0.3) +
labs( x ="Energy of tracks",
title = "Distribution of Enerygy")
# Top Song wise acoustic-ness Distribution
t_acoustic <- ggplot(df_new, aes(x = acousticness, fill = top_class))+
theme_bw() +
geom_density( alpha= 0.3) +
labs( x ="acousticness of tracks",
title = "Distribution of Acousticness")
# Top Song wise loudness Distribution
t_loudness <- ggplot(df_new, aes(x = loudness, fill = top_class))+
theme_bw() +
geom_density( alpha= 0.3) +
labs( x ="Loudness of tracks",
title = "Distribution of Loudness")
# Top Song wise Popularity Distribution
t_popularity <- ggplot(df_new, aes(x = track.Popularity, fill = top_class))+
theme_bw() +
geom_density( alpha= 0.3) +
labs( x ="Popularity of tracks",
title = "Distribution of Popularity")
figure <- ggarrange(t_energy, t_loudness, t_acoustic, t_popularity,
labels = c("A", "B", "C","D"),
ncol = 2, nrow = 2)
figure
className(df_new)
colnames(df_new)
cor_data <- select(energy,acousticness,loudness,track.Popularity)
cor_data <- select(c(energy,acousticness,loudness,track.Popularity))
cor_data <- select(df_new,energy,acousticness,loudness,track.Popularity)
View(cor_data)
cormat <- round(cor(cor_data),2)
cormat
library(reshape2)
install.packages("reshape2")
library(reshape2)
melted_cormat <- melt(cormat)
melted_cormat
heat_map_corr <- ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
heat_map_corr
heat_map_corr <- ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()+
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5))
heat_map_corr
heat_map_corr <- ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
heat_map_corr
heat_map_corr <- ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()+
theme(
legend.direction = "horizontal")+
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5))
heat_map_corr
heat_map_corr <- ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
legend.direction = "horizontal")+
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5))
heat_map_corr
heat_map_corr <- ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
panel.background = element_blank(),
axis.ticks = element_blank(),
legend.justification = c(1, 0),
legend.position = c(0.6, 0.7),
legend.direction = "horizontal")+
guides(fill = guide_colorbar(barwidth = 7, barheight = 1,
title.position = "top", title.hjust = 0.5))
heat_map_corr
heat_map_corr <- ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) +
geom_tile()
heat_map_corr
